name: Deploy
run-name: Deploying ${{ github.repository }}

env:
  TF_VAR_resource_group: ${{ secrets.TF_VAR_resource_group }}
  TF_VAR_subscription_id: ${{ secrets.TF_VAR_subscription_id }}

on:
  push:
    branches: [main]

defaults:
  run:
    working-directory: ./exercise

jobs:
  release:
    name: Deploy
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: hashicorp/setup-terraform@v3
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check if sqlcmd is installed
        id: check-sqlcmd
        shell: pwsh
        run: |
          Set-GitHubOutput 'available' ($null -ne (Get-Command sqlcmd -ErrorAction SilentlyContinue))

      - name: install sqlcmd
        if: runner.os == 'Linux' && steps.check-sqlcmd.outputs.available != 'true'
        shell: bash
        run: |
          curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          source ~/.bashrc
          echo '/opt/mssql-tools18/bin' >> $GITHUB_PATH

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
